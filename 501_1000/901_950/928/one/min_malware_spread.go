package one

const (
	r = 1 << iota // 感染节点
	p             // 使用中
)

func MinMalwareSpread(graph [][]int, initial []int) int {
	nodes := make(map[int]byte, len(initial))
	for _, node := range initial {
		nodes[node] |= r
	}
	var dfs func(int, int) int
	dfs = func(on, node int) int {
		nodes[node] |= p
		total := 1
		for i := range graph {
			if graph[node][i] == 1 {
				if nodes[i]&r > 0 {
					if on == i || node == on {
						// 本来就是当前节点无影响
						continue
					}
					total = 0
					break
				}
				// 该点正在使用
				if nodes[i]&p > 0 {
					continue
				}
				// 无法继续
				if i >= len(graph) {
					break
				}
				t := dfs(on, i)
				if t == 0 {
					total = 0
					break
				}
				total += t
			}
		}
		nodes[node] |= r // 能连接到感染点也会被感染
		return total
	}
	ans := -1
	nums := 0
	for _, node := range initial {
		t := dfs(node, node)
		if t == 0 {
			t = 1 // 只能移除自身
		}
		if ans == -1 || nums < t || (nums == t && node < ans) {
			ans = node
			nums = t
		}
	}
	return ans
}
